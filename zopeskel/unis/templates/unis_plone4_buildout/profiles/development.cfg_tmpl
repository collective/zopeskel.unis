#==============================================================================
# Developpement configuration file for ${customer}:${project} portal
#==============================================================================

# Developpement configuration file
# ================================
# - Zope installed on filesystem
# - One instance running
# - All debugging tools and settings ready
# - A virtualhost based on templat-project.user.localdomain

# NB : Please create your own dev_user.cfg to override this one.

# Ports configuration
# ===================
# client (80) => appache => zope server (${dev_instance})

[buildout]
extends =
    standalone.cfg
    etc/http.cfg
#if $app_ide == 'true'
    modules/plonide.cfg
#end if

newest = false
develop = \${project-settings:develop}
parts +=
    instance
    zopepy
    i18ndude
    test
    zopeskel
    omelette

# Downloads storage folder
download-cache = downloads
extends-cache = extends


#==============================================================================
# Use some usefull developpement packages and under dev packages
#==============================================================================

[project-settings]
eggs += plone.reload
        ipdb
        iw.debug
        Products.PDBDebugMode
        Products.DocFinderTab
        Products.PrintingMailHost
        Products.DCWorkflowGraph
        collective.workflowed
#        collective.portlet.debuginfo
#        collective.profiler
        plone.app.testing

zcml += plone.reload
        iw.debug
#        collective.portlet.debuginfo

#auto-checkout += collective.portlet.debuginfo

[sources]
#collective.portlet.debuginfo = svn http://svn.plone.org/svn/collective/collective.portlet.debuginfo/trunk/

[versions]
iw.debug = 0.3
ipdb = 0.4
ipython = 0.10.1
collective.portlet.debuginfo = 1.1
# No version for developped packages
#collective.portlet.debuginfo =


#==============================================================================
# Configure developpement ports and ips
#==============================================================================

[ports]
instance = ${dev_instance}
cache = 80

[hosts]
main = ${customer}-${project}-user.dev.${domain_name}

#if $http_utility == 'apache'
#==============================================================================
# Apache - virtualhost configuration
#==============================================================================

[apache]
backends = \${hosts:main}:\${hosts:instance}:\${ports:instance}
#end if

#==============================================================================
# Zope - instance configuration
#==============================================================================

[instance]
zodb-cache-size = 2500
debug-mode = on
verbose-security = on
environment-vars = zope_i18n_compile_mo_files true

#==============================================================================
# Debugging tools - preconfigured python interpreter and omelette
#==============================================================================

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = \${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs = \${instance:eggs}

# create ZopeSkel command
[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    \${instance:eggs}

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = \${instance:eggs}
