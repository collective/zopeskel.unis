#==============================================================================
# Tests configuration file for ${customer}:${project} portal
#==============================================================================

# Tests configuration file
# ========================
# - Zope installed on filesystem
# - One instance running
# - All testing tools available

# Buildout configuration
# ======================
# tested_package and tested_package_path are available options.
# They can be set up like this :
# ./bin/buildout buildout:tested_package=my.package buildout:tested_package_path=./src/my.package

# Ports configuration
# ===================
# client (80) => zope server (${dev_instance})

[buildout]
extends = standalone.cfg

tested_package = 
tested_package_path = 

parts +=
    test
    xmltestrunner
    coverage
    report
    zptlint
    zptlint-test
    pyflakes
    pyflakes-test
    pylint
    pylint-test
    windmill
    test-all

[project-settings]
eggs +=
    collective.portlet.debuginfo
    collective.profiler
    \${buildout:tested_package}

zcml +=
    collective.portlet.debuginfo
    collective.profiler
    \${buildout:tested_package}

develop += \${buildout:tested_package_path}

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs = \${instance:eggs}

# create bin/xmltestrunner command to use with jenkins
[xmltestrunner]
recipe = collective.xmltestreport
eggs = \${instance:eggs}
zcml = \${instance:zcml}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '--xml']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report

[zptlint]
recipe = zc.recipe.egg
eggs = zptlint
entry-points = zptlint=zptlint:run

[zptlint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -e zptlint.log ]; then
        echo "Old zptlint.log file removed"
        rm zptlint.log
    fi
    echo "Running zptlint-test"
    ZLINT=`echo $0 | sed 's/zptlint-test/zptlint/g'`
    find \$1 -regex ".*\.[c|z]?pt" | xargs -r \$ZLINT | perl -p -e 's/\s+$/ /g;s/\s+/ /g;s/\*{3}s?/\n/g' >> zptlint.log
output = \${buildout:directory}/bin/zptlint-test
mode = 755

[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pyflakes-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pyflakes.log ]; then
        rm pyflakes.log
        echo "Old pyflakes.log file removed"
    fi
    echo "Running pyflakes"
    ZFLAKES=`echo $0 | sed 's/pyflakes-test/pyflakes/g'`
    find -L $1 -name skins -prune -o -name "*.py" -print | xargs -r \$ZFLAKES >> pyflakes.log
    exit 0
output = \${buildout:directory}/bin/pyflakes-test
mode = 755

[pylint]
recipe = zc.recipe.egg
eggs = logilab.pylintinstaller
entry-points = pylint=pylint.lint:Run
arguments = [
    '--output-format=parseable',
    '--zope=y',
    '--reports=y',
    '--comment=y',
    '--disable-msg=E0611,F0401,W0232,E1101,C0103,R0201,W0142,W0201,W1001,R0911,R0903,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622',
    '--generated-members=objects',
    ] + sys.argv[1:]

[pylint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pylint.log ]; then
        rm pylint.log
        echo "Old pylint.log file removed"
    fi
    echo "Running pylint"
    PYLINT=`echo \$0 | sed 's/pylint-test/pylint/g'`
    find -L \$1 -name skins -prune -o -name "*.py" -print | xargs \$PYLINT >> pylint.log
output = \${buildout:directory}/bin/pylint-test
mode = 755

[windmill]
recipe = zc.recipe.egg
eggs = windmill

[test-all]
recipe = plone.recipe.alltests
test-script = bin/xmltestrunner
exclude =  collective.portlet.debuginfo
           collective.profiler
